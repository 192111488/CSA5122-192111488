#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define SIZE 5

char playfair_matrix[SIZE][SIZE] = {
    {'M', 'F', 'H', 'I', 'K'},
    {'U', 'N', 'O', 'P', 'Q'},
    {'Z', 'V', 'W', 'X', 'Y'},
    {'E', 'L', 'A', 'R', 'G'},
    {'D', 'S', 'T', 'B', 'C'}
};

void find_position(char c, int *row, int *col) {
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            if (playfair_matrix[i][j] == c || (playfair_matrix[i][j] == 'I' && c == 'J')) {
                *row = i;
                *col = j;
                return;
            }
        }
    }
}

void encrypt_playfair(char message[], char encrypted_message[]) {
    int len = strlen(message);
    char sanitized_message[2 * len + 1];
    int sanitized_index = 0;

    // Sanitize the message (replace 'J' with 'I' and remove spaces and punctuation)
    for (int i = 0; i < len; i++) {
        if (isalpha(message[i])) {
            sanitized_message[sanitized_index++] = toupper(message[i]);
        }
    }
    sanitized_message[sanitized_index] = '\0';

    len = strlen(sanitized_message);
    sanitized_index = 0;

    // Encrypt the message
    for (int i = 0; i < len; i += 2) {
        char a = sanitized_message[i];
        char b = sanitized_message[i + 1];
        int row1, col1, row2, col2;
        find_position(a, &row1, &col1);
        find_position(b, &row2, &col2);

        if (row1 == row2) {
            encrypted_message[sanitized_index++] = playfair_matrix[row1][(col1 + 1) % SIZE];
            encrypted_message[sanitized_index++] = playfair_matrix[row2][(col2 + 1) % SIZE];
        } else if (col1 == col2) {
            encrypted_message[sanitized_index++] = playfair_matrix[(row1 + 1) % SIZE][col1];
            encrypted_message[sanitized_index++] = playfair_matrix[(row2 + 1) % SIZE][col2];
        } else {
            encrypted_message[sanitized_index++] = playfair_matrix[row1][col2];
            encrypted_message[sanitized_index++] = playfair_matrix[row2][col1];
        }
    }

    encrypted_message[sanitized_index] = '\0';
}

int main() {
    char message[] = "Must see you over Cadogan West. Coming at once.";
    char encrypted_message[2 * strlen(message) + 1];

    encrypt_playfair(message, encrypted_message);

    printf("Encrypted message: %s\n", encrypted_message);

    return 0;
}
