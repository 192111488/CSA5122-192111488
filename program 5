#include <stdio.h>
#include <ctype.h>

int mod_inverse(int a, int m) {
    a = a % m;
    for (int x = 1; x < m; x++)
        if ((a * x) % m == 1)
            return x;
    return 1;
}

int main() {
    char plaintext[100];
    int a, b;

    printf("Enter the plaintext to encrypt: ");
    fgets(plaintext, sizeof(plaintext), stdin);

    printf("Enter the value of a (must be coprime with 26): ");
    scanf("%d", &a);

    if (a % 2 == 0 || a % 13 == 0) {
        printf("a must be coprime with 26. Exiting...\n");
        return 1;
    }

    printf("Enter the value of b: ");
    scanf("%d", &b);

    int len = strlen(plaintext);
    for (int i = 0; i < len; i++) {
        if (!isalpha(plaintext[i])) {
            continue;
        }

        char offset = isupper(plaintext[i]) ? 'A' : 'a';
        int p = plaintext[i] - offset;
        int c = (a * p + b) % 26;

        plaintext[i] = c + offset;
    }

    printf("Encrypted text: %s\n", plaintext);

    return 0;
}
