#include <stdio.h>
#include <string.h>
#include <ctype.h>

int main() {
    char ciphertext[] = "53‡‡†305))6*;4826)4‡.)4‡);806*;48†8¶60))85;;]8*;:‡*8†83 (88)5*†;46(;88*96*?;8)*‡(;485);5*†2:*‡(;4956*2(5*—4)8¶8* ;4069285);)6†8)4‡‡;1(‡9;48081;8:8‡1;48†85;4)485†528806*81 (‡9;48;(88;4(‡?34;48)4‡;161;:188;‡?;";
    int frequency[256] = {0};
    int len = strlen(ciphertext);

    // Calculate the frequency of each character in the ciphertext
    for (int i = 0; i < len; i++) {
        frequency[(int)ciphertext[i]]++;
    }

    // Find the most frequent character
    int maxFreq = 0;
    char mostFreqChar;
    for (int i = 0; i < 256; i++) {
        if (frequency[i] > maxFreq) {
            maxFreq = frequency[i];
            mostFreqChar = (char)i;
        }
    }

    // Assume the most frequent character corresponds to 'E' in the plaintext
    // Calculate the shift to decrypt the message
    int shift = mostFreqChar - 'E';

    // Decrypt the ciphertext
    for (int i = 0; i < len; i++) {
        if (isalpha(ciphertext[i])) {
            char decryptedChar = ciphertext[i] - shift;
            if (islower(ciphertext[i]) && decryptedChar < 'a') {
                decryptedChar += 26;
            } else if (isupper(ciphertext[i]) && decryptedChar < 'A') {
                decryptedChar += 26;
            }
            ciphertext[i] = decryptedChar;
        }
    }

    printf("Decrypted text: %s\n", ciphertext);

    return 0;
}
