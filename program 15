#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <stdlib.h>

#define ALPHABET_SIZE 26

// Function to calculate the frequency of each letter in a string
void calculate_frequency(char text[], int frequency[]) {
    for (int i = 0; i < strlen(text); i++) {
        if (isalpha(text[i])) {
            frequency[toupper(text[i]) - 'A']++;
        }
    }
}

// Function to decrypt a ciphertext using a given key
void decrypt(char ciphertext[], int key) {
    int length = strlen(ciphertext);
    for (int i = 0; i < length; i++) {
        if (isalpha(ciphertext[i])) {
            char decrypted_char = ((ciphertext[i] - 'A' - key + ALPHABET_SIZE) % ALPHABET_SIZE) + 'A';
            printf("%c", decrypted_char);
        } else {
            printf("%c", ciphertext[i]);
        }
    }
    printf("\n");
}

int main() {
    char ciphertext[] = "BQDRK";
    int frequency[ALPHABET_SIZE] = {0};

    calculate_frequency(ciphertext, frequency);

    // Find the most frequent letter in the ciphertext
    int max_frequency = 0;
    int max_index = 0;
    for (int i = 0; i < ALPHABET_SIZE; i++) {
        if (frequency[i] > max_frequency) {
            max_frequency = frequency[i];
            max_index = i;
        }
    }

    // Assuming the most frequent letter in English is 'E' (ASCII value 69)
    int key = (max_index - ('E' - 'A') + ALPHABET_SIZE) % ALPHABET_SIZE;

    printf("Decrypted message (Key=%d): ", key);
    decrypt(ciphertext, key);

    return 0;
}
